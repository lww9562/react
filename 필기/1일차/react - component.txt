1. 함수형 컴포넌트
	function App() {
	  const name = '';

	  return (
		<>
		  {/* 리액트 주석 */}
		  <div className='react'>{name || 'REACT'} 입니다.</div>
		  <h1>반갑습니다.</h1>
		</>
	  );
	}

	export default App;


2. 클래스형 컴포넌트
	import { Component } from 'react';

	class App extends Component {
	  render() {
		const name = 'REACT';

		return (
		  <>
			<div className='react'>{name || 'REACT'}</div>
			<h1>반갑습니다.</h1>
		  </>
		)
	  }
	}

	export default App;


3. 첫 컴포넌트 생성
	- 코드 작성
	- 모듈 내보내기
		export 객체...
		export default
		
		
	- 모듈 불러오기
		import 객체... from 모듈경로
		
	※JSX → 다루기 쉬운 HTML로 작성 → DOM 객체로 변환

	
		
4. props
	- 부모 컴포넌트에서 자식 컴포넌트로 값을 전달할 때
	- 속성 → 컴포넌트 매개변수 props
	
	- 태그 사이에 입력된 값 : props.children
	
	- 기본값 설정
		.defaultProps = {
			기본값을 정할 속성명 : 기본값,
			...
		}
	
	- 자료형 설정
		.prop-types 모듈 import
			import ... from '설치된 모듈';
	
		Proptypes.자료형
		Proptypes.자료형.isRequired : 필수항목
		
5. state
	- 컴포넌트 내부에서 변경될 수 있는 값
	- 직접 객체의 속성값을 변경할 수 없음
		→ 별도의 메서드 이용
			- setState(변경된 state 객체)
			
	※ props, state의 값이 변경 → render() 호출 → 화면 갱신
	
	
	- 함수형 컴포넌트
		useState(기본값) 형식으로 사용
			→ 배열 객체 반환
				- 0 : 상태 변화 변수
				- 1 : 상태 변화 함수
				
	
